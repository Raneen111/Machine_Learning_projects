{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Raneen111/Machine_Learning_projects/blob/main/multi_linear_%26_Logistic_Regression.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Case Study: House Price\n",
        "\n",
        "The dataset represents a synthetic collection of house-related features and their corresponding prices. It contains 1000 samples, with each sample having the following features:\n",
        "\n",
        "- Size: The size of the house\n",
        "- Bedrooms: The number of bedrooms in the house\n",
        "- Bathrooms: The number of bathrooms in the house\n",
        "- Location: A feature representing the location of the house\n",
        "- YearBuilt: The year the house was built\n",
        "- RoofType: The type of roof on the house\n",
        "- Price: The price of the house"
      ],
      "metadata": {
        "id": "G5m3nvD2mt2J"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Load and Explore the Dataset"
      ],
      "metadata": {
        "id": "VXzc7u7CnLYL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "df = pd.read_csv('/content/house_prices_dataset.csv')\n",
        "df"
      ],
      "metadata": {
        "id": "UbJKu2TunPIa",
        "outputId": "42120831-a2ed-40dc-f2e9-e83e25e6d584",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Size  Bedrooms  Bathrooms  Location  YearBuilt  RoofType       Price\n",
              "0   -0.325611  0.257199   0.007880 -0.164335  -0.240665  0.212093  -16.984913\n",
              "1   -0.202193  1.277665   0.547097 -0.217681  -0.591571  1.098777   24.031693\n",
              "2   -2.153731  0.975713   0.685858  0.446982   0.000756 -0.638586   57.305959\n",
              "3   -0.939880 -1.304470   0.366598 -0.513867   0.669673 -1.059214  -81.049670\n",
              "4   -0.570351  1.223083   0.352505 -1.820603  -0.258854  0.270057 -127.396000\n",
              "..        ...       ...        ...       ...        ...       ...         ...\n",
              "995       NaN  0.689164  -0.273729  0.149598  -0.683634  0.097827   13.634300\n",
              "996 -0.564079 -1.021233   0.243801 -1.280304   0.708356  0.872457 -138.161669\n",
              "997 -0.981166 -1.725807   1.194109 -0.464404  -0.677565  0.462061  -94.896020\n",
              "998       NaN  1.158596   0.963376  0.822060  -0.820682  1.896793  133.087712\n",
              "999 -0.562288  0.241962  -1.724918 -1.012831  -1.913280  0.314247 -188.649246\n",
              "\n",
              "[1000 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f5caea86-af37-41fa-9fc6-81e8ea6f1a81\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Size</th>\n",
              "      <th>Bedrooms</th>\n",
              "      <th>Bathrooms</th>\n",
              "      <th>Location</th>\n",
              "      <th>YearBuilt</th>\n",
              "      <th>RoofType</th>\n",
              "      <th>Price</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-0.325611</td>\n",
              "      <td>0.257199</td>\n",
              "      <td>0.007880</td>\n",
              "      <td>-0.164335</td>\n",
              "      <td>-0.240665</td>\n",
              "      <td>0.212093</td>\n",
              "      <td>-16.984913</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-0.202193</td>\n",
              "      <td>1.277665</td>\n",
              "      <td>0.547097</td>\n",
              "      <td>-0.217681</td>\n",
              "      <td>-0.591571</td>\n",
              "      <td>1.098777</td>\n",
              "      <td>24.031693</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-2.153731</td>\n",
              "      <td>0.975713</td>\n",
              "      <td>0.685858</td>\n",
              "      <td>0.446982</td>\n",
              "      <td>0.000756</td>\n",
              "      <td>-0.638586</td>\n",
              "      <td>57.305959</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-0.939880</td>\n",
              "      <td>-1.304470</td>\n",
              "      <td>0.366598</td>\n",
              "      <td>-0.513867</td>\n",
              "      <td>0.669673</td>\n",
              "      <td>-1.059214</td>\n",
              "      <td>-81.049670</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-0.570351</td>\n",
              "      <td>1.223083</td>\n",
              "      <td>0.352505</td>\n",
              "      <td>-1.820603</td>\n",
              "      <td>-0.258854</td>\n",
              "      <td>0.270057</td>\n",
              "      <td>-127.396000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>995</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.689164</td>\n",
              "      <td>-0.273729</td>\n",
              "      <td>0.149598</td>\n",
              "      <td>-0.683634</td>\n",
              "      <td>0.097827</td>\n",
              "      <td>13.634300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>996</th>\n",
              "      <td>-0.564079</td>\n",
              "      <td>-1.021233</td>\n",
              "      <td>0.243801</td>\n",
              "      <td>-1.280304</td>\n",
              "      <td>0.708356</td>\n",
              "      <td>0.872457</td>\n",
              "      <td>-138.161669</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>997</th>\n",
              "      <td>-0.981166</td>\n",
              "      <td>-1.725807</td>\n",
              "      <td>1.194109</td>\n",
              "      <td>-0.464404</td>\n",
              "      <td>-0.677565</td>\n",
              "      <td>0.462061</td>\n",
              "      <td>-94.896020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>998</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.158596</td>\n",
              "      <td>0.963376</td>\n",
              "      <td>0.822060</td>\n",
              "      <td>-0.820682</td>\n",
              "      <td>1.896793</td>\n",
              "      <td>133.087712</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>999</th>\n",
              "      <td>-0.562288</td>\n",
              "      <td>0.241962</td>\n",
              "      <td>-1.724918</td>\n",
              "      <td>-1.012831</td>\n",
              "      <td>-1.913280</td>\n",
              "      <td>0.314247</td>\n",
              "      <td>-188.649246</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1000 rows Ã— 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f5caea86-af37-41fa-9fc6-81e8ea6f1a81')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f5caea86-af37-41fa-9fc6-81e8ea6f1a81 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f5caea86-af37-41fa-9fc6-81e8ea6f1a81');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b9fe76c1-8dec-42e5-927a-7ac79ad135d4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b9fe76c1-8dec-42e5-927a-7ac79ad135d4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b9fe76c1-8dec-42e5-927a-7ac79ad135d4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 1
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Let's explore the dataset to better know what we're dealing with"
      ],
      "metadata": {
        "id": "iEqIDMqynhFj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Question 1:\n",
        "# Get the shape of the dataset\n",
        "shape = df.shape\n",
        "print (\"Shape of the dataset:\\n\",shape )\n",
        "\n",
        "\n",
        "# Check the data types of the columns\n",
        "Type = df.dtypes\n",
        "print (\"Data types of the columns:\\n\", Type)"
      ],
      "metadata": {
        "id": "B7_mD1cxnga1",
        "outputId": "4f231eee-5ac8-46f6-bd18-7c8b34f7751f",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Shape of the dataset:\n",
            " (1000, 7)\n",
            "Data types of the columns:\n",
            " Size         float64\n",
            "Bedrooms     float64\n",
            "Bathrooms    float64\n",
            "Location     float64\n",
            "YearBuilt    float64\n",
            "RoofType     float64\n",
            "Price        float64\n",
            "dtype: object\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Deeper Exploration"
      ],
      "metadata": {
        "id": "5_Fu1UJPnyTs"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# Question 2:\n",
        "# Check for missing values\n",
        "\n",
        "missing_values = df.isnull().sum()\n",
        "print(\"Missing Values before dropping null values:\\n\", missing_values)\n",
        "\n",
        "# Drop rows with NaN values\n",
        "df= df.dropna()\n",
        "\n",
        "# Check for missing values again\n",
        "print(\"Missing values after dropping null values :\\n\", df.isnull().sum())"
      ],
      "metadata": {
        "id": "6jOhgLu3n4tH",
        "outputId": "f2cb77b7-018c-48f5-8478-1b32aed333d3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Missing Values before dropping null values:\n",
            " Size         200\n",
            "Bedrooms     100\n",
            "Bathrooms      0\n",
            "Location       0\n",
            "YearBuilt      0\n",
            "RoofType       0\n",
            "Price          0\n",
            "dtype: int64\n",
            "Missing values after dropping null values :\n",
            " Size         0\n",
            "Bedrooms     0\n",
            "Bathrooms    0\n",
            "Location     0\n",
            "YearBuilt    0\n",
            "RoofType     0\n",
            "Price        0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "This function sns.pairplot() creates scatter plots for each numerical feature (Size, Bedrooms, Bathrooms, Location, YearBuilt) against the target variable (Price)."
      ],
      "metadata": {
        "id": "AzHNfS31oqDh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "# Question 3:\n",
        "# Create plots to better understand the data\n",
        "\n",
        "sns.pairplot(df, x_vars =[\"Size\",\"Bedrooms\",\"Location\",\"YearBuilt\"],y_vars=[\"Price\"],hue=\"Price\")\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "yFDdvVRhogX4",
        "outputId": "baa8104b-beee-4301-cbc1-20f841aa2716",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 233
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.PairGrid at 0x7e12239438e0>"
            ]
          },
          "metadata": {},
          "execution_count": 4
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1088x250 with 4 Axes>"
            ],
            "image/png": "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348PPvgAly5dwi9/+UvcddddOH78ON5//3389a9/xeuvv+54zuzZs/HPf/4T69evx5EjR5CUlITU1FRcvXrVad+LFi3Ce++9hwMHDjiSM8uXL8eGDRvw+eef48svv8TKlSsB1DbnHTt2LJ566imcPXsWu3fvxsMPP1wvQUPkyW4lfubNm4fFixdjwYIFOHPmDDZs2IDIyEhHuclkwrp163DmzBmsWLECa9aswbJlywAAjz76KGbNmoWuXbs6rpOPPvpovXpUVFQgNTUVwcHBOHToEDZv3oyvvvoKU6dOddpu165dyMjIwK5du7B+/XqsW7fOkTwh8gbjx4/HkCFD8NRTT+G9997DqVOnsGrVKgwePBi9e/fGt99+i23btiE/Px+//e1vHc+rqKjAzJkz8e2332Lnzp0QRRG//vWvYbfbnfY/d+5czJgxA2fPnm2wy4yiKNi2bRuys7MxYMCAVjmnuLg4/POf/wTwUwuSFStWtMq+iTyeQuRlPvnkEyU4OFjRarXK3XffrcybN085fvy4oxyAsmXLlnrPS09PV7RarbJp0yZFURSlurpa0ev1yoEDB5y2mzhxojJ27Ng2PQciVxo/frwiSZJiMBgUg8GgAFCio6OVw4cPK4qiKB999JHSqVMnxW63O55jNpsVnU6nbN++XVEURYmOjlaWLFniKLdYLEpsbKwyatQox7r77rtP6d27t9OxX3zxxXr7/vOf/6wYjUbFZrMp5eXlilqtVj7++GNHeU1NjRITE+M43q5duxQAyldffeXYJi0tTQGgZGRkONZNmjRJSU1NVRRFUQ4fPqwAULKyspr9uhG5yvjx451iqc7N4qe0tFTRaDTKmjVrbvlYb7/9ttK3b1/H44ULFyo9e/ast92N19LVq1crwcHBSnl5uaP8888/V0RRVPLy8hznkJCQoFitVsc2jzzyiPLoo4/ect2IPEF+fr4SFhamiKKobNmyRXnttdeUYcOGOW2Tk5OjAFDOnz/f4D4KCwsVAMrJkycVRVGUzMxMBYCyfPlyp+3qrm9112eVSqWIoqi8/vrrTtslJCQoy5Ytc1rXs2dPZeHChY7HN8Zs3fGOHj3qdJxr167d3otB5OXYsoO8zpgxY3D58mX8+9//xvDhw7F792706dOnyV+PsrOzMXr0aDz//POOTPyFCxdQWVmJBx54wNFixGg04u9//7tT00MiXzBo0CAcO3YMx44dwzfffIPU1FSMGDECP/74I44fP44LFy7AZDI54iAkJATV1dXIyMhASUkJcnNznX5lUqlUjhZSN+rbt6/T47NnzyIlJQWCIDjWDRw4EOXl5bh48SIyMjJgsVgwcOBAR7larUb//v1x9uxZp3316NHD8XdkZKSjWf6N6woKCgAAPXv2xJAhQ9C9e3c88sgjWLNmDa5du9bMV4/IPW4WP2fPnoXZbMaQIUMa3cemTZswcOBAREVFwWg0Yv78+cjOzr7tevTs2RMGg8GpHna7HefPn3es69q1KyRJcjyOjo52xCSRt4iIiMCkSZPQpUsXjB49GsePH8euXbuc7hU7d+4MAI77xe+//x5jx45Fhw4dEBAQgPbt2wNAvVhr6LoJAPv27XNcoz/88EO8+eabeP/999vuJIn8hMrdFSBqDq1WiwceeAAPPPAAFixYgN///vdYuHBhg30QKyoq8NBDDyElJQWvvvqqY31dX+PPP/8c7dq1c3oOB3giX2MwGJCUlOR4/OGHHyIwMBBr1qxBeXk5+vbt69R/uE54ePhtH6etqNVqx9+CIDg9rltX12RYkiTs2LEDBw4ccHRveemll3Dw4EEkJia2WR2JXEmn0zVZnp6ejsceewyvvPIKUlNTERgYiI0bN+Kdd95pk/o0FZNE3kSlUkGlqv2aVF5ejl/96ld466236m0XHR0NAPjVr36FhIQErFmzBjExMbDb7ejWrVu9gbobu0YmJiYiKCgIQG3S8ODBg3jjjTcwefJkAIAoivW6YXI8HKKbY8sO8gnJyckNDjyoKAoef/xx2O12fPTRR06/jiUnJ0Oj0SA7OxtJSUlOS1xcnCurT+RygiBAFEVUVVWhT58++P777xEREVEvFgIDAxEYGIjo6GgcPHjQ8Xyr1YrDhw/f9DhdunRBenq6003a/v37YTKZEBsbizvuuMMxxkcdi8WCQ4cOITk5ucXnOHDgQLzyyis4evQoZFlucJwRIk91s/jp2LEjdDpdo7M2HDhwAAkJCXjppZfQr18/dOzYET/++KPTNrIsw2az3bQex48fd7rO7t+/H6IoolOnTi04QyLP16dPH5w+fRrt27evd400GAwoKirC+fPnMX/+fAwZMgRdunRpcUtCSZJQVVXleBweHo7c3FzH49LSUmRmZt7y/mRZBoCbxjqRr2Gyg7xKUVERBg8ejH/84x84ceIEMjMzsXnzZixZsgSjRo2qt/2iRYvw1VdfYdWqVSgvL0deXh7y8vJQVVUFk8mE559/Hs899xzWr1+PjIwMHDlyBCtXrsT69evdcHZEbcdsNjv+/589exbTpk1z/Fr12GOPISwsDKNGjcK+ffuQmZmJ3bt3Y/r06bh48SIAYMaMGVi8eDG2bt2Kc+fO4Y9//COKi4tvetw//vGPyMnJwbRp03Du3Dn861//wsKFCzFz5kyIogiDwYDJkyfjhRdewLZt23DmzBk8/fTTqKysxMSJE5t9vgcPHsSbb76Jb7/9FtnZ2fj0009RWFiILl26NHufRG2ppKTE0Yy9bvnDH/7QZPxotVrMmTMHs2fPdnTB/Prrr/HXv/4VANCxY0dkZ2dj48aNyMjIwLvvvlsv4de+fXtkZmbi2LFjuHLlSoODfz/22GPQarUYP348Tp06hV27dmHatGkYN26c02CoRL5oypQpuHr1KsaOHYtDhw4hIyMD27dvx5NPPgmbzYbg4GCEhoZi9erVuHDhAv773/9i5syZt3WMgoIC5OXl4ccff8TmzZvx0UcfOd3XDh48GB999BH27duHkydPYvz48U5dxm4mISEBgiDgs88+Q2FhodNMSkS+jN1YyKsYjUYMGDAAy5Ytc/T1j4uLw9NPP40XX3yx3vZ79uxBeXk57r77bqf1a9euxYQJE/Daa68hPDwcaWlp+OGHHxAUFIQ+ffo0uC8ib7Zt2zZHc1uTyYTOnTtj8+bNuP/++wEAe/fuxZw5c/Dwww+jrKwM7dq1w5AhQxAQEAAAmDVrFnJzczF+/HiIooinnnoKv/71r1FSUtLkcdu1a4f//Oc/eOGFF9CzZ0+EhIRg4sSJmD9/vmObxYsXw263Y9y4cSgrK0O/fv2wfft2BAcHN/t8AwICsHfvXixfvhylpaVISEjAO++8gxEjRjR7n0Rtaffu3ejdu7fTuokTJ940fhYsWACVSoWXX34Zly9fRnR0NJ555hkAwEMPPYTnnnsOU6dOhdlsxoMPPogFCxY4TVc5ZswYfPrppxg0aBCKi4sd18cb6fV6bN++HTNmzMBdd90FvV6PMWPG4E9/+lObvR5EniImJgb79+/HnDlzMGzYMJjNZiQkJGD48OEQRRGCIGDjxo2YPn06unXrhk6dOuHdd991XF9vRV0LKZVKhbi4OEyaNMkpTufNm4fMzEyMHDkSgYGBeO21126rZUe7du3wyiuvYO7cuXjyySfxxBNPcKYk8guC8vMOYEREREREREREXozdWIiIiIiIiIjIpzDZQUREREREREQ+hckOIiIiIiIiIvIpTHYQERERERERkU9hsoOIiIiIiIiIfAqTHURERERERETkU5jsICIiIiIiIiKfwmQHEREREREREfkUJjuIiIiIiIiIyKcw2UFEREREREREPoXJDiIiIiIiIiLyKUx2EBEREREREZFP+X/5sBFVWC3fhgAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Predictive Modeling using Linear Regression"
      ],
      "metadata": {
        "id": "Lr9boItso52E"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Split the Data\n",
        "- Train a Linear Regressor\n",
        "- Evaluate it on the test set using any metric of your choice"
      ],
      "metadata": {
        "id": "vAxt2xBXo_Gf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LinearRegression\n",
        "\n",
        "# Question 4:\n",
        "# Split the data into features (X) and target variable (y)\n",
        "X = df.drop('Price', axis=1)\n",
        "y = df['Price']\n",
        "\n",
        "\n",
        "# Split the data into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n"
      ],
      "metadata": {
        "id": "0omN-q4XpNwN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a logistic regression model\n",
        "model = LinearRegression()\n",
        "\n",
        "# Fit the model on the training data\n",
        "model.fit(X_train, y_train)"
      ],
      "metadata": {
        "id": "erx-JQs05YZu",
        "outputId": "1bb51426-2712-4889-86db-e0a396d59474",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 74
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import mean_squared_error, r2_score\n",
        "\n",
        "# Question 5:\n",
        "# Evaluate the model on the test set\n",
        "predictions = model.predict(X_test)\n",
        "\n",
        "# Calculate evaluation metrics\n",
        "r2 = r2_score(y_test, predictions)\n",
        "\n",
        "\n",
        "# Print the evaluation metrics\n",
        "print('r2 score for a model is: ', r2)\n"
      ],
      "metadata": {
        "id": "27CwX0iIpVMF",
        "outputId": "83a86078-2eb8-4815-bbcf-73e661bdd946",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "r2 score for a model is:  0.9999788915641026\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Predictive Modeling using Logistic Regression"
      ],
      "metadata": {
        "id": "0Ds0ruILzSxP"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "To utilize the same dataset for logistic regression, you need to transform the problem into a classification task. For example, you can introduce a threshold and classify the houses as \"expensive\" or \"affordable\" based on whether their prices are above or below the threshold. You can choose the threshold based on your dataset or specific requirements.\n",
        "\n",
        "Convert the target variable into a binary variable (0 or 1) representing the classes (e.g., 0 for affordable, 1 for expensive). Then, train a logistic regression model using the same features to classify houses as either affordable or expensive based on the chosen threshold."
      ],
      "metadata": {
        "id": "e11b3mySzi7Q"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\n",
        "\n",
        "# Question 6:\n",
        "\n",
        "# Set the median as a threshold to classify houses as \"expensive\" or \"affordable\"\n",
        "threshold=df['Price'].median()        #threshold = median= -4.906226780830425\n",
        "#If house prices are above the threshold, they are classified as expensive.\n",
        "#If house prices are below the threshold, they are classified as affordable.\n",
        "\n",
        "\n",
        "# Transform the problem into a classification task\n",
        "df['Class'] = df['Price'].apply(lambda x: 0 if x >= threshold else 1)\n",
        "\n",
        "\n",
        "df= df.drop('Price', axis=1)\n",
        "\n",
        "\n",
        "df.head()\n"
      ],
      "metadata": {
        "id": "niQ_7ItEzZ9i",
        "outputId": "76eec589-c9d2-4669-b5b7-a33e2247b385",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 330
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-8-c812b7ca6af9>:13: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  df['Class'] = df['Price'].apply(lambda x: 0 if x >= threshold else 1)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Size  Bedrooms  Bathrooms  Location  YearBuilt  RoofType  Class\n",
              "0 -0.325611  0.257199   0.007880 -0.164335  -0.240665  0.212093      1\n",
              "1 -0.202193  1.277665   0.547097 -0.217681  -0.591571  1.098777      0\n",
              "2 -2.153731  0.975713   0.685858  0.446982   0.000756 -0.638586      0\n",
              "3 -0.939880 -1.304470   0.366598 -0.513867   0.669673 -1.059214      1\n",
              "4 -0.570351  1.223083   0.352505 -1.820603  -0.258854  0.270057      1"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3c24c3e6-90f0-461d-b2d5-4ac32b41f42a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Size</th>\n",
              "      <th>Bedrooms</th>\n",
              "      <th>Bathrooms</th>\n",
              "      <th>Location</th>\n",
              "      <th>YearBuilt</th>\n",
              "      <th>RoofType</th>\n",
              "      <th>Class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-0.325611</td>\n",
              "      <td>0.257199</td>\n",
              "      <td>0.007880</td>\n",
              "      <td>-0.164335</td>\n",
              "      <td>-0.240665</td>\n",
              "      <td>0.212093</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-0.202193</td>\n",
              "      <td>1.277665</td>\n",
              "      <td>0.547097</td>\n",
              "      <td>-0.217681</td>\n",
              "      <td>-0.591571</td>\n",
              "      <td>1.098777</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-2.153731</td>\n",
              "      <td>0.975713</td>\n",
              "      <td>0.685858</td>\n",
              "      <td>0.446982</td>\n",
              "      <td>0.000756</td>\n",
              "      <td>-0.638586</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-0.939880</td>\n",
              "      <td>-1.304470</td>\n",
              "      <td>0.366598</td>\n",
              "      <td>-0.513867</td>\n",
              "      <td>0.669673</td>\n",
              "      <td>-1.059214</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-0.570351</td>\n",
              "      <td>1.223083</td>\n",
              "      <td>0.352505</td>\n",
              "      <td>-1.820603</td>\n",
              "      <td>-0.258854</td>\n",
              "      <td>0.270057</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3c24c3e6-90f0-461d-b2d5-4ac32b41f42a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3c24c3e6-90f0-461d-b2d5-4ac32b41f42a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3c24c3e6-90f0-461d-b2d5-4ac32b41f42a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-97bfcd64-eb1a-445b-af8a-5ef568735d31\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-97bfcd64-eb1a-445b-af8a-5ef568735d31')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-97bfcd64-eb1a-445b-af8a-5ef568735d31 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Split the data into features (X) and target variable (y)\n",
        "X = df.drop('Class', axis=1)\n",
        "y = df['Class']\n",
        "\n",
        "\n",
        "\n",
        "# Split the data into training and test sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "\n",
        "#Create a logistic regression model\n",
        "classifier = LogisticRegression()\n",
        "\n",
        "# Fit a logistic regression model\n",
        "classifier.fit(X_train, y_train)\n",
        "\n",
        "# Make predictions on the test set\n",
        "y_pred = classifier.predict(X_test)\n",
        "\n",
        "# Calculate evaluation metrics\n",
        "\n",
        "accuracy = accuracy_score(y_test, y_pred)\n",
        "precision = precision_score(y_test, y_pred)\n",
        "recall = recall_score(y_test, y_pred)\n",
        "f1 = f1_score(y_test, y_pred)\n",
        "\n",
        "\n",
        "# Print the evaluation metrics\n",
        "print(\"Accuracy:\", accuracy)\n",
        "print(\"Precision:\", precision)\n",
        "print(\"Recall:\", recall)\n",
        "print(\"F1 score:\", f1)\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "vcRGbYXbl7S1",
        "outputId": "9b93f220-4d66-4475-d1c9-105746366e68",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy: 0.9861111111111112\n",
            "Precision: 0.9857142857142858\n",
            "Recall: 0.9857142857142858\n",
            "F1 score: 0.9857142857142858\n"
          ]
        }
      ]
    }
  ]
}
